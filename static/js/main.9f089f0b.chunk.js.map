{"version":3,"sources":["types/index.ts","state/local-storage.ts","state/effects.ts","state/store.ts","components/Control/index.tsx","components/Formula/index.tsx","methods.ts","utils/portal.tsx","utils/throttle.ts","components/Graph/index.tsx","components/MathBoard/index.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx"],"names":["SolvingMethod","loadState","serializedState","localStorage","getItem","JSON","parse","err","saveState","state","stringify","setItem","window","evaluatex","Evaluate","withEffects","store","on","subscribe","f","objects","undefined","latex","console","log","x","error","toString","split","actions","solve","onAll","getState","defaultState","formula","step","eps","solvingMethod","BISECT","scale","offset","precisePlot","debug","initialEvaluatex","initialState","Store","createStore","withStore","connect","writeCalculationMethod","event","set","parseInt","target","value","writeCheckbox","param","checked","className","get","onChange","CHORD","TANGENT","onClick","draw","save","type","writeFloat","mathField","parseFloat","writeFormula","saveMQ","Formula","editRaw","toggleRaw","setState","this","props","mathquillDidMount","React","Component","Roots","roots","map","r","i","digits","Math","abs","log10","toFixed","length","key","Methods","a","b","e","F","xx","Fa","Fb","Fx","sign","ITERATION","derivative","Portal","defaultNode","renderPortal","ReactDOM","unmountComponentAtNode","node","document","body","removeChild","createElement","appendChild","children","render","Throttle","delay","_","__","propertyDesciptor","func","ms","isThrottled","savedArgs","savedThis","wrapper","arguments","apply","setTimeout","throttle","isMobile","some","rexp","test","navigator","userAgent","ref","Graph","MQLabel","y","location","left","center","stage","container","offsetLeft","width","range","top","offsetTop","height","style","position","backgroundColor","componentArrayFactory","component","axis","Array","round","fill","floor","corners","strokeWidth","Lines","ItemLine","Numbers","ItemNumber","resizeCanvas","bind","reset","handleDrag","handleScroll","drawCanvas","addEventListener","removeEventListener","points","calculatePoints","innerWidth","innerHeight","evt","preventDefault","layer","getLayer","attrs","id","modifiers","getModifierState","getStage","oldScale","mousePos","getPointerPosition","newScale","deltaY","newPos","absPos","getAbsolutePosition","dragging","scaledStep","push","rootZones","forEach","p","next","filter","Number","isFinite","uri","toDataURL","pixelRatio","link","download","href","click","Stage","ReactKonva","Layer","Group","Rect","Line","Text","onWheel","onDblTap","onDblClick","draggable","onDragStart","onDragEnd","root","stroke","flat","scaleY","visible","text","v","Object","values","fontSize","fontFamily","scaleX","operators","writeLaTex","op","write","replace","Button","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","getElementById","URL","process","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9f089f0b.chunk.js","sourcesContent":["import { EvalFunc } from 'evaluatex';\r\nimport { Vector2d } from 'konva/types/types';\r\nimport { IMathField } from 'react-mathquill';\r\nimport { Effects, Store } from 'undux';\r\nimport { defaultState } from '../state/store';\r\n\r\nexport enum SolvingMethod {\r\n    BISECT,\r\n    CHORD,\r\n    TANGENT,\r\n    ITERATION\r\n}\r\n\r\nexport type ArrayPoint = [number, number];\r\n\r\nexport type IState = typeof defaultState;\r\n\r\nexport type ItemComponent = (i: number, axis: keyof Vector2d, scale: Vector2d, stroke: Vector2d) => JSX.Element;\r\n\r\nexport interface IObjects {\r\n    mathField: IMathField;\r\n    evaluatex: EvalFunc | null;\r\n}\r\n\r\nexport interface IActions {\r\n    solve: () => void;\r\n    draw: () => void;\r\n    save: () => void;\r\n}\r\n\r\nexport interface IStoreProps {\r\n    store: Store<IState>;\r\n}\r\n\r\nexport type StoreEffects = Effects<IState>;\r\n","import { IState } from '../types';\r\n\r\nexport const loadState: () => IState = () => {\r\n  try {\r\n      const serializedState = localStorage.getItem('state');\r\n      if (serializedState === null) {\r\n      return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n  } catch (err) {\r\n      return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: IState) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n","import Evaluate from 'evaluatex';\r\nimport { StoreEffects } from '../types';\r\nimport { saveState } from './local-storage';\r\nimport { actions, objects } from './store';\r\n\r\n// @ts-ignore\r\nwindow.evaluatex = Evaluate;\r\n\r\nconst withEffects: StoreEffects = store => {\r\n  // store\r\n  //   .hook('eps', (previousValue, value) => parseFloat());\r\n  // store\r\n  //   .hook('step', (previousValue, value) => );\r\n\r\n  store\r\n    .on('formula')\r\n    .subscribe(f => {\r\n      try {\r\n        objects.evaluatex = Evaluate(f, undefined, { latex: true }\r\n        );\r\n        console.log(objects.evaluatex({x: 2}));\r\n      } catch (error) {\r\n        objects.evaluatex = null;\r\n        console.log(error.toString().split('\\n')[0]);\r\n      }\r\n    });\r\n\r\n  store\r\n    .on('eps')\r\n    .subscribe(() => actions.solve!());\r\n\r\n  store\r\n    .onAll()\r\n    .subscribe(() =>\r\n      saveState(store.getState())\r\n    );\r\n  return store;\r\n};\r\n\r\nexport default withEffects;\r\n","import evaluatex from 'evaluatex';\r\nimport { connect, createStore } from 'undux';\r\nimport { IActions, IObjects, SolvingMethod } from '../types';\r\nimport withEffects from './effects';\r\nimport { loadState, saveState } from './local-storage';\r\n\r\nexport const defaultState = {\r\n    formula: 'sin(x)',\r\n    step: 0.01,\r\n    eps: 0.0001,\r\n    solvingMethod: SolvingMethod.BISECT,\r\n    scale: [100, 100],\r\n    offset: [0.5, 0.5],\r\n    precisePlot: false,\r\n    debug: false\r\n};\r\n\r\nif (!loadState()) {\r\n    saveState(defaultState);\r\n}\r\n\r\nconst initialState = {...defaultState, ...loadState()};\r\n\r\nexport const actions: Partial<IActions> = {};\r\n\r\nlet initialEvaluatex;\r\n\r\ntry {\r\n    initialEvaluatex = evaluatex(initialState.formula);\r\n} catch (err) {/* */}\r\n\r\nexport const objects: Partial<IObjects>  = {\r\n    evaluatex: initialEvaluatex,\r\n};\r\n\r\nexport const Store = createStore(initialState);\r\nwithEffects(Store);\r\nexport const withStore = connect(Store);\r\n","import React from 'react';\r\nimport { actions, Store, withStore } from '../../state/store';\r\nimport { IState, IStoreProps, SolvingMethod } from '../../types';\r\nimport './Control.css';\r\n\r\nconst writeCalculationMethod = (event: React.ChangeEvent<HTMLSelectElement>) => Store.set('solvingMethod')(parseInt(event.target.value));\r\nconst writeCheckbox = (param: keyof IState) => (event: React.ChangeEvent<HTMLInputElement>) => Store.set(param)(event.target.checked);\r\n\r\nconst Control: React.FC<IStoreProps> = ({ store }) => (\r\n    <div className=\"Control\">\r\n        <div className=\"Control-panel\">\r\n            <select className=\"Control-select\" value={store.get('solvingMethod')} onChange={writeCalculationMethod}>\r\n                <option value={SolvingMethod.BISECT}>Метод бисекции</option>\r\n                <option value={SolvingMethod.CHORD}>Метод хорд</option>\r\n                <option value={SolvingMethod.TANGENT}>Метод касательных</option>\r\n                {/* <option value={SolvingMethod.ITERATION}>Метод простых итераций</option> */}\r\n            </select>\r\n            <button onClick={actions.draw} className=\"Control-button\">График</button>\r\n            <button onClick={actions.solve} className=\"Control-button\">Рассчитать</button>\r\n            <button onClick={actions.save} className=\"Control-button\">Сохранить</button>\r\n        </div>\r\n        <div className=\"Control-panel\">\r\n            <span className=\"Control-panel-checkbox\">\r\n                <input type=\"checkbox\" checked={store.get('precisePlot')} onChange={writeCheckbox('precisePlot')}/>\r\n                <span>Точное построение</span>\r\n            </span>\r\n            <span className=\"Control-panel-checkbox\">\r\n                <input type=\"checkbox\" checked={store.get('debug')} onChange={writeCheckbox('debug')}/>\r\n                <span>Отладка</span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default withStore(Control);\r\n","import React from 'react';\r\nimport { IMathField, MathQuill, MathQuillStatic } from 'react-mathquill';\r\nimport { objects, Store, withStore } from '../../state/store';\r\nimport { IState, IStoreProps } from '../../types';\r\nimport './Formula.css';\r\n\r\ninterface IComponentState {\r\n    editRaw: boolean;\r\n}\r\n\r\ninterface IRoots {\r\n    roots: number[];\r\n}\r\n\r\nconst writeFloat = (param: keyof IState) => (mathField: IMathField) => Store.set(param)(parseFloat(mathField.latex()));\r\nconst writeFormula = (mathField: IMathField) => Store.set('formula')(mathField.latex());\r\nconst saveMQ = (mathField: IMathField) => objects.mathField = mathField;\r\n\r\nclass Formula extends React.Component<IStoreProps, IComponentState> {\r\n    public state = { editRaw: false };\r\n\r\n    public toggleRaw = () => {\r\n        this.setState({ editRaw: !this.state.editRaw });\r\n    }\r\n\r\n    public render() {\r\n        const { store } = this.props;\r\n        return (\r\n            <div className=\"Formula\">\r\n                <MathQuill\r\n                    className={typeof objects.evaluatex !== 'object' ? '' : 'Formula-error'}\r\n                    latex={store.get('formula')}\r\n                    onChange={writeFormula}\r\n                    mathquillDidMount={saveMQ}\r\n                />\r\n                <MathQuillStatic\r\n                    latex=\"=0,\\ e=\"\r\n                />\r\n                <MathQuill\r\n                    latex={store.get('eps').toString()}\r\n                    onChange={writeFloat('eps')}\r\n                />\r\n                <MathQuillStatic\r\n                    latex=\",\\ \\Delta=\"\r\n                />\r\n                <MathQuill\r\n                    latex={store.get('step').toString()}\r\n                    onChange={writeFloat('step')}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Roots: React.FC<IRoots> = ({ roots }) => (\r\n    <>{\r\n        roots\r\n        .map((r, i) => {\r\n            const digits = Math.abs(Math.log10(Store.get('eps'))) || 1;\r\n            const latex = `x_{${i + 1}}=`\r\n                + +r.toFixed(digits)\r\n                + (i < roots.length - 1 ? ',\\\\ ' : '');\r\n            return (\r\n                <MathQuillStatic\r\n                    key={r.toFixed(digits)}\r\n                    latex={latex}\r\n                />\r\n            );\r\n        })\r\n    }</>\r\n);\r\n\r\nexport default withStore(Formula);\r\n","import { objects, Store } from './state/store';\r\nimport { ArrayPoint, SolvingMethod } from './types';\r\n\r\nexport default class Methods {\r\n    public static [SolvingMethod.BISECT]([a, b]: ArrayPoint): number {\r\n        const e = Store.get('eps');\r\n        const F = (xx: number) => objects.evaluatex!({ x: xx });\r\n        let x;\r\n        do {\r\n            const Fa = F(a);\r\n            const Fb = F(b);\r\n            if (Fa === 0) { return a; }\r\n            if (Fb === 0) { return b; }\r\n            x = (a + b) / 2;\r\n            const Fx = F(x);\r\n            Math.sign(Fa)\r\n            !== Math.sign(Fx)\r\n                ? b = x\r\n                : a = x;\r\n        } while (b - a > e);\r\n\r\n        return x;\r\n    }\r\n\r\n    public static [SolvingMethod.ITERATION]([a, b]: ArrayPoint): number {\r\n        const c = (a + b) / 2;\r\n        // const e = Store.get('eps');\r\n        // const F = (xx: number) => objects.evaluatex!({ x: xx });\r\n        return c;\r\n    }\r\n\r\n    public static [SolvingMethod.TANGENT]([a, b]: ArrayPoint): number {\r\n        const e = Store.get('eps');\r\n        const F = (xx: number) => objects.evaluatex!({ x: xx });\r\n        let i = 0;\r\n        while (Math.abs(b - a) > e) {\r\n            a = b - F(b) / Methods.derivative(b);\r\n            b = a;\r\n            if (i > 10) { return b; }\r\n            i++;\r\n        }\r\n        return b;\r\n    }\r\n\r\n    public static [SolvingMethod.CHORD]([a, b]: ArrayPoint): number {\r\n        const e = Store.get('eps');\r\n        const F = (xx: number) => objects.evaluatex!({ x: xx });\r\n        while (Math.abs(b - a) > e) {\r\n            a = b - (b - a) * F(b) / (F(b) - F(a));\r\n            b = a + (a - b) * F(a) / (F(a) - F(b));\r\n        }\r\n        return b;\r\n    }\r\n\r\n    public static derivative(x: number) {\r\n        const e = Store.get('eps');\r\n        const F = (xx: number) => objects.evaluatex!({ x: xx });\r\n        return (F(x + e) - F(x)) / e;\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\ninterface IPortalProps {\r\n    node?: Element | null;\r\n}\r\n\r\nexport default class Portal extends React.Component<IPortalProps> {\r\n    public defaultNode: HTMLDivElement | null = null;\r\n\r\n    public componentDidMount() {\r\n        this.renderPortal();\r\n    }\r\n\r\n    public componentDidUpdate() {\r\n        this.renderPortal();\r\n    }\r\n\r\n    public componentWillUnmount() {\r\n        ReactDOM.unmountComponentAtNode(this.defaultNode! || this.props.node);\r\n        if (this.defaultNode) {\r\n            document.body.removeChild(this.defaultNode);\r\n        }\r\n        this.defaultNode = null;\r\n    }\r\n\r\n    public renderPortal() {\r\n        if (!this.props.node && !this.defaultNode) {\r\n            this.defaultNode = document.createElement('div');\r\n            document.body.appendChild(this.defaultNode);\r\n        }\r\n\r\n        const children = this.props.children;\r\n          // https://gist.github.com/jimfb/d99e0678e9da715ccf6454961ef04d1b\r\n        // if (typeof children.type === 'function') {\r\n        //     children = React.cloneElement(children);\r\n        // }\r\n\r\n        ReactDOM.render(<>{children}</>, this.props.node || this.defaultNode);\r\n    }\r\n\r\n    public render() {\r\n        return null;\r\n    }\r\n}\r\n","import 'reflect-metadata';\r\n\r\nexport default function Throttle(delay: number) {\r\n    return (_: any, __: any, propertyDesciptor: PropertyDescriptor) => {\r\n\r\n        propertyDesciptor.value = throttle(propertyDesciptor.value, delay);\r\n\r\n        return propertyDesciptor;\r\n    };\r\n}\r\n\r\nexport function throttle(func: (args: IArguments) => any, ms: number) {\r\n\r\n  let isThrottled = false;\r\n  let savedArgs: any = null;\r\n  let savedThis: any = null;\r\n\r\n  function wrapper(this: any) {\r\n\r\n    if (isThrottled) {\r\n      savedArgs = arguments;\r\n      savedThis = this;\r\n      return;\r\n    }\r\n\r\n    func.apply(this, [arguments]);\r\n\r\n    isThrottled = true;\r\n\r\n    setTimeout(() => {\r\n      isThrottled = false;\r\n      if (savedArgs) {\r\n        wrapper.apply(savedThis, savedArgs);\r\n        savedArgs = savedThis = null;\r\n      }\r\n    }, ms);\r\n  }\r\n\r\n  return wrapper;\r\n}\r\n","import { Layer as LayerType } from 'konva/types/Layer';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { Stage as StageType } from 'konva/types/Stage';\nimport React from 'react';\nimport * as ReactKonva from 'react-konva';\nimport { MathQuillStatic } from 'react-mathquill';\nimport Methods from '../../methods';\nimport { actions, defaultState, objects, withStore } from '../../state/store';\nimport { ArrayPoint, IStoreProps, ItemComponent } from '../../types';\nimport Portal from '../../utils/portal';\nimport Throttle from '../../utils/throttle';\nimport { Roots } from '../Formula';\nimport './Graph.css';\n\nconst isMobile = [/Android/, /webOS/, /iPhone/, /iPad/, /iPod/, /BlackBerry/, /Windows Phone/].some(rexp => rexp.test(navigator.userAgent));\nconst scaleFactor = 1.05;\n\ninterface IRootLabel {\n  i: number;\n  x: number;\n  y: number;\n}\n\nclass Graph extends React.Component<IStoreProps, typeof Graph.defaultState> {\n  public static defaultState = {\n    width: window.innerWidth * 0.9,\n    height: window.innerHeight * 0.6,\n    points: [] as ArrayPoint[],\n    roots: null as number[] | null,\n    dragging: false\n   };\n\n  constructor(props: any) {\n    super(props);\n\n    this.resizeCanvas = this.resizeCanvas.bind(this);\n    this.reset = this.reset.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    actions.draw = this.drawCanvas.bind(this);\n    actions.solve = this.solve.bind(this);\n    actions.save = this.save.bind(this);\n  }\n\n  public ref: ReactKonva.Stage | null = null;\n\n  public state = Graph.defaultState;\n\n  public componentDidMount() {\n    window.addEventListener('resize', this.resizeCanvas);\n    this.drawCanvas();\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeCanvas);\n  }\n\n  @Throttle(isMobile ? 1000 : 500)\n  public drawCanvas() {\n    console.log('Draw called');\n\n    this.setState({ points: this.calculatePoints() });\n  }\n\n  public resizeCanvas() {\n    this.setState({ width: window.innerWidth * 0.9, height: window.innerHeight * 0.6 });\n    this.drawCanvas();\n  }\n\n  public handleScroll(event: KonvaEventObject<WheelEvent>) {\n    event.evt.preventDefault();\n    const layer = event.target.getLayer() as LayerType;\n    if (layer?.attrs.id === 'graph') {\n      const keys = ['Control', 'Alt', 'Shift'];\n      const modifiers = keys.map(key => event.evt.getModifierState(key));\n      const stage = layer.getStage() as StageType;\n      const oldScale = layer.scale();\n      const mousePos = {\n        x: stage.getPointerPosition()!.x / oldScale.x - layer.x() / oldScale.x,\n        y: stage.getPointerPosition()!.y / oldScale.y - layer.y() / oldScale.y\n      };\n      const newScale = {\n        x: (modifiers[0] || modifiers[1])\n          ? (event.evt.deltaY < 0 ? oldScale.x * scaleFactor : oldScale.x / scaleFactor)\n          : oldScale.x,\n        y: (modifiers[0] || modifiers[2])\n          ? (event.evt.deltaY < 0 ? oldScale.y * scaleFactor : oldScale.y / scaleFactor)\n          : oldScale.y,\n      };\n      const newPos = {\n        x: -(mousePos.x - stage.getPointerPosition()!.x / newScale.x) * newScale.x,\n        y: -(mousePos.y - stage.getPointerPosition()!.y / newScale.y) * newScale.y,\n      };\n      this.props.store.set('scale')([newScale.x, newScale.y]);\n      this.props.store.set('offset')([newPos.x / this.state.width, newPos.y / this.state.height]);\n    }\n    this.drawCanvas();\n    if (this.state.roots !== null) {\n      this.solve();\n    }\n  }\n\n  public handleDrag(event: KonvaEventObject<DragEvent> & { type: string }) {\n    switch (event.type) {\n      case 'dragend':\n        const absPos = event.target.getAbsolutePosition();\n        this.props.store.set('offset')([absPos.x / this.state.width, absPos.y / this.state.height]);\n        this.setState({ dragging: false });\n        this.drawCanvas();\n        if (this.state.roots !== null) {\n          this.solve();\n        }\n        break;\n      case 'dragstart':\n        this.setState({ dragging: true });\n        break;\n    }\n  }\n\n  public reset() {\n    this.props.store.set('offset')(defaultState.offset);\n    this.props.store.set('scale')(defaultState.scale);\n    this.setState({ roots: null });\n    this.drawCanvas();\n  }\n\n  public calculatePoints() {\n    if (objects.evaluatex) {\n      const store = this.props.store;\n\n      const scaledStep = store.get('precisePlot') ? store.get('step') : (this.corners.x[1] - this.corners.x[0]) / this.state.width;\n\n      const points: ArrayPoint[] = [];\n      for (let x = this.corners.x[0]; x < this.corners.x[1]; x += scaledStep) {\n        try {\n          points.push([x, objects.evaluatex({ x })]);\n        } catch (error) {\n          console.log('errrr');\n        }\n      }\n      return points;\n    } else {\n      return [];\n    }\n  }\n\n  @Throttle(isMobile ? 1000 : 200)\n  public solve() {\n    const points = this.calculatePoints();\n    const rootZones: ArrayPoint[] = [];\n    points.forEach((p, i) => {\n      const next = points[i + 1];\n      if (next && next[1] * p[1] <= 0) {\n        rootZones.push([p[0], next[0]]);\n      }\n    });\n    console.log(rootZones);\n    const roots = rootZones\n      .map(Methods[this.props.store.get('solvingMethod')])\n      .filter(Number.isFinite);\n\n    console.log(roots);\n\n    this.setState({ points, roots });\n  }\n\n  public save() {\n    const uri = this.stage!.toDataURL({ pixelRatio: 2, x: 0, y: 0 });\n    const link = document.createElement('a');\n    link.download = 'plot.png';\n    link.href = uri;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  public render() {\n    const { Stage, Layer, Group, Rect, Line, Text } = ReactKonva;\n\n    return (\n      <div className=\"Graph\">\n        <Stage\n          ref={r => this.ref = r}\n          onWheel={this.handleScroll}\n          className=\"Graph-stage\"\n          {...this.state}\n        >\n          <Layer\n            onDblTap={this.reset}\n            onDblClick={this.reset}\n            draggable\n            onDragStart={this.handleDrag}\n            onDragEnd={this.handleDrag}\n            scale={this.scale}\n            id=\"graph\"\n            {...this.center}\n            // Main layer\n          >\n            <Group>\n              <Rect\n                fill=\"transparent\"\n                x={-this.center.x / this.scale.x}\n                y={-this.center.y / this.scale.y}\n                width={this.state.width / this.scale.x}\n                height={this.state.height / this.scale.y}\n              />\n\n              {this.Lines.x()}\n              {this.Numbers.x()}\n\n              {this.Lines.y()}\n              {this.Numbers.y()}\n\n              <Portal>\n                {(this.state.roots && !this.state.dragging ? this.state.roots : [])\n                  .map((root, i) => {\n                    const props = {\n                      x: root - 0.1,\n                      y: -0.5,\n                      i\n                    };\n                    return <this.MQLabel key={root} {...props} />;\n                })}\n              </Portal>\n            </Group>\n            <Group>\n              <Line stroke=\"black\" strokeWidth={this.strokeWidth.x} points={this.state.points.flat()} scaleY={-1} />\n            </Group>\n          </Layer>\n          <Layer\n            visible={this.store.get('debug')}\n            id=\"debug\"\n            // Debug layer\n          >\n            <Text\n              onClick={this.reset}\n              text={\n                'react-konva'\n                + '\\nH:'\n                + this.state.height.toFixed(2)\n                + ' W:'\n                + this.state.width.toFixed(2)\n                + '\\nS:'\n                + this.store.get('scale').map(v => v.toFixed(2))\n                + '\\nO:'\n                + this.store.get('offset').map(v => v.toFixed(2))\n                + '\\nC:'\n                + Object.values(this.center).map(v => v.toFixed(2))\n                + '\\nBx:'\n                + this.corners.x.map(v => v.toFixed(2))\n                + ' By:'\n                + this.corners.y.map(v => v.toFixed(2))\n                + '\\nRx:'\n                + this.range.x.toFixed(2)\n                + ' Ry:'\n                + this.range.y.toFixed(2)\n                + '\\nSx:'\n                + this.strokeWidth.x.toFixed(3)\n                + ' Sy:'\n                + this.strokeWidth.y.toFixed(3)\n                + '\\nP:'\n                + this.state.points.length\n                + '\\nDouble-click to reset.'\n              }\n              fontSize={12}\n              fontFamily={`\"Lucida Console\", Monaco, monospace`}\n            />\n          </Layer>\n        </Stage>\n        <div className=\"Graph-roots\">\n          <Roots roots={this.state.roots || []} />\n        </div>\n      </div>\n    );\n  }\n\n  // getters\n\n  public get store() {\n    return this.props.store;\n  }\n\n  public get center() {\n    const state = this.state;\n    const store = this.store;\n    return {\n      x: state.width * store.get('offset')[0],\n      y: state.height * store.get('offset')[1],\n    };\n  }\n\n  public get range() {\n    return {\n      x: this.state.width / this.store.get('scale')[0],\n      y: this.state.height / this.store.get('scale')[1]\n    };\n  }\n\n  public get corners() {\n    const offset = this.store.get('offset');\n    return {\n      x: [-this.range.x * offset[0], this.range.x * (1 - offset[0])],\n      y: [-this.range.y * offset[1], this.range.y * (1 - offset[1])]\n    };\n  }\n\n  public get scale() {\n    return {\n      x: this.store.get('scale')[0],\n      y: this.store.get('scale')[1]\n    };\n  }\n\n  public get strokeWidth() {\n    return {\n      x: 2 / this.scale.x,\n      y: 2 / this.scale.y\n    };\n  }\n\n  public get stage() {\n    return this.ref?.getStage();\n  }\n\n  // Sub-components\n\n  public MQLabel: React.FC<IRootLabel> = ({ i, x, y }) => {\n    const location = {\n      left: this.center.x + this.stage!.container().offsetLeft + this.state.width * x / this.range.x,\n      top: this.center.y + this.stage!.container().offsetTop + this.state.height * y / this.range.y,\n    };\n    return (\n      <MathQuillStatic\n        style={{\n          position: 'absolute',\n          backgroundColor: 'white',\n          ...location\n        }}\n        latex={`x_{${i + 1}}`}\n      />\n    );\n  }\n\n  public componentArrayFactory = (component: ItemComponent, axis: 'x' | 'y') => () =>\n    new Array(\n      Math.round(this.range[axis]) + 1\n    )\n    .fill(null)\n    .map((_, i) =>\n      Math.floor(this.corners[axis][0]) + i)\n    .map(i => component(i, axis, this.scale, this.strokeWidth))\n\n  public Lines = {\n    x: this.componentArrayFactory(Graph.ItemLine, 'x'),\n    y: this.componentArrayFactory(Graph.ItemLine, 'y'),\n  };\n\n  public Numbers = {\n    x: this.componentArrayFactory(Graph.ItemNumber, 'x'),\n    y: this.componentArrayFactory(Graph.ItemNumber, 'y'),\n  };\n\n  public static ItemLine: ItemComponent = (i, axis, scale, stroke) => (\n    <ReactKonva.Line\n      key={i}\n      stroke=\"black\"\n      strokeWidth={stroke[axis] / (i ? 3 : 1)}\n      points={axis === 'x' ? [i, -9000, i, 9000] : [-9000, i, 9000, i]}\n    />\n  )\n\n  public static ItemNumber: ItemComponent = (i, axis, scale, stroke) => {\n    return (\n      <ReactKonva.Text\n        key={i}\n        x={(axis === 'x' ? i : 0) + 0.1 * defaultState.scale[0] / scale.x}\n        y={(axis === 'x' ? 0 : i) + 0.1 * defaultState.scale[1] / scale.y}\n        scaleX={0.3 * defaultState.scale[0] / scale.x}\n        scaleY={0.3 * defaultState.scale[1] / scale.y}\n        fontSize={1}\n        text={+i.toFixed(1) + ''}\n      />\n    );\n  }\n}\n\nexport default withStore(Graph);\n","import React from 'react';\r\nimport { MathQuillStatic } from 'react-mathquill';\r\nimport { objects, withStore } from '../../state/store';\r\nimport { IStoreProps } from '../../types';\r\nimport './MathBoard.css';\r\n\r\n// interface IState {\r\n//     editRaw: boolean;\r\n// }\r\n\r\nconst operators = ['\\\\pi', '□^2', 'x^{□}', '\\\\sqrt{□}', '\\\\sqrt[□]{□}', '\\\\frac{□}{□}', '\\\\log_{□}'];\r\n\r\nconst writeLaTex = (op: string) => () => objects.mathField?.write(op.replace(/□/g, ''));\r\n\r\nconst Button = (op: string, i: number) => (\r\n    <div\r\n        key={`btn${i}`}\r\n        className=\"MathBoard-buttons\"\r\n        onClick={writeLaTex(op)}\r\n    >\r\n        <MathQuillStatic latex={op} />\r\n    </div>\r\n);\r\n\r\nconst MathBoard: React.FC<IStoreProps> = ({ store }) => (\r\n    <div className=\"MathBoard\">\r\n        {operators.map(Button)}\r\n    </div>\r\n);\r\n\r\nexport default withStore(MathBoard);\r\n","import React from 'react';\nimport { withStore } from '../../state/store';\nimport { IStoreProps } from '../../types';\nimport Control from '../Control';\nimport Formula from '../Formula';\nimport Graph from '../Graph';\nimport MathBoard from '../MathBoard';\nimport './App.css';\n\nclass App extends React.Component<IStoreProps> {\n  public render() {\n    // const { store } = this.props;\n    return (\n      <div className=\"App\">\n        <Graph />\n        <Formula />\n        <Control />\n        <MathBoard />\n        <div className=\"App-footer\">\n          Репозиторий:&nbsp;<a href=\"https://github.com/BadCoder1337/equations-solver\">equations-solver</a>\n          &#160;\n          Автор:&nbsp;<a href=\"https://github.com/BadCoder1337\">BadCoder1337</a>\n          &#160;\n          Сделано&nbsp;с&nbsp;помощью&nbsp;<a href=\"https://typescriptlang.org\">TypeScript</a>&nbsp;&&nbsp;<a href=\"https://reactjs.org/\">React</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStore(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface IConfig {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: IConfig) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: IConfig) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config?.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config?.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: IConfig) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import Root from './components/Root';\nimport './index.css';\nimport './mathquill.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}