{"version":3,"sources":["types/index.ts","state/local-storage.ts","state/effects.ts","state/store.ts","components/Control/index.tsx","components/Formula/index.tsx","decorators/throttle.ts","methods.ts","components/Graph/index.tsx","components/MathBoard/index.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx"],"names":["SolvingMethod","loadState","serializedState","localStorage","getItem","JSON","parse","err","saveState","state","stringify","setItem","window","evaluatex","Evaluate","initialEvaluatex","withEffects","store","on","subscribe","f","objects","undefined","latex","console","log","x","error","toString","split","actions","solve","onAll","getState","initialState","formula","step","eps","solvingMethod","BISECT","scale","offset","precisePlot","Object","assign","Store","createStore","withStore","connect","writeCalculationMethod","event","set","parseInt","target","value","param","className","get","onChange","CHORD","TANGENT","onClick","draw","type","checked","writeFloat","mathField","parseFloat","writeFormula","saveMQ","Formula","editRaw","toggleRaw","setState","this","props","mathquillDidMount","React","Component","Roots","roots","map","r","i","digits","Math","abs","log10","toFixed","length","key","delay","Methods","a","b","e","F","xx","Fa","Fb","Fx","sign","ITERATION","derivative","isMobile","some","rexp","test","navigator","userAgent","_","__","propertyDesciptor","func","ms","isThrottled","savedArgs","savedThis","wrapper","arguments","apply","setTimeout","throttle","width","innerWidth","height","innerHeight","points","resizeCanvas","bind","resetTransform","handleDrag","handleScroll","drawCanvas","addEventListener","removeEventListener","calculatePoints","evt","preventDefault","layer","getLayer","attrs","id","modifiers","getModifierState","stage","getStage","oldScale","mousePos","getPointerPosition","y","newScale","deltaY","newPos","absPos","getAbsolutePosition","range","corners","scaledStep","push","rootZones","forEach","p","next","filter","Number","isFinite","center","withScale","withStrokeWidth","strokeWidth","sqrt","Stage","ReactKonva","Layer","Group","Rect","Line","Text","onWheel","onDblTap","onDblClick","draggable","onDragEnd","fill","stroke","flat","scaleY","text","v","values","fontSize","fontFamily","operators","writeLaTex","op","write","replace","Button","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3310d757.chunk.js","sourcesContent":["import { EvalFunc } from 'evaluatex';\r\nimport { IMathField } from 'react-mathquill';\r\nimport { Effects, Store } from 'undux';\r\nimport { initialState } from '../state/store';\r\n\r\nexport enum SolvingMethod {\r\n    BISECT,\r\n    CHORD,\r\n    TANGENT,\r\n    ITERATION\r\n}\r\n\r\nexport type ArrayPoint = [number, number];\r\n\r\nexport type IState = typeof initialState;\r\n\r\nexport interface IObjects {\r\n    mathField: IMathField;\r\n    evaluatex: EvalFunc | null;\r\n}\r\n\r\nexport interface IActions {\r\n    solve: () => void;\r\n    draw: () => void;\r\n}\r\n\r\nexport interface IStoreProps {\r\n    store: Store<IState>;\r\n}\r\n\r\nexport type StoreEffects = Effects<IState>;\r\n","import { IState } from '../types';\r\n\r\nexport const loadState: () => IState = () => {\r\n  try {\r\n      const serializedState = localStorage.getItem('state');\r\n      if (serializedState === null) {\r\n      return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n  } catch (err) {\r\n      return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: IState) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch {\r\n    // ignore write errors\r\n  }\r\n};\r\n","import Evaluate from 'evaluatex';\r\nimport { StoreEffects } from '../types';\r\nimport { saveState } from './local-storage';\r\nimport { actions, objects } from './store';\r\n\r\n// @ts-ignore\r\nwindow.evaluatex = Evaluate;\r\n\r\nconst withEffects: StoreEffects = store => {\r\n  // store\r\n  //   .hook('eps', (previousValue, value) => parseFloat());\r\n  // store\r\n  //   .hook('step', (previousValue, value) => );\r\n\r\n  store\r\n    .on('formula')\r\n    .subscribe(f => {\r\n      try {\r\n        objects.evaluatex = Evaluate(f, undefined, { latex: true }\r\n        );\r\n        console.log(objects.evaluatex({x: 2}));\r\n      } catch (error) {\r\n        objects.evaluatex = null;\r\n        console.log(error.toString().split('\\n')[0]);\r\n      }\r\n    });\r\n\r\n  store\r\n    .on('eps')\r\n    .subscribe(() => actions.solve!());\r\n\r\n  store\r\n    .onAll()\r\n    .subscribe(() =>\r\n      saveState(store.getState())\r\n    );\r\n  return store;\r\n};\r\n\r\nexport default withEffects;\r\n","import evaluatex from 'evaluatex';\r\nimport { connect, createStore } from 'undux';\r\nimport { IActions, IObjects, SolvingMethod } from '../types';\r\nimport withEffects from './effects';\r\nimport { loadState, saveState } from './local-storage';\r\n\r\nexport const initialState = {\r\n    formula: 'sin(x)',\r\n    step: 0.01,\r\n    eps: 0.0001,\r\n    solvingMethod: SolvingMethod.BISECT,\r\n    scale: [100, 100],\r\n    offset: [0.5, 0.5],\r\n    precisePlot: false,\r\n};\r\n\r\nexport const actions: Partial<IActions> = {};\r\n\r\nlet initialEvaluatex;\r\n\r\ntry {\r\n    initialEvaluatex = evaluatex(initialState.formula);\r\n} catch (err) {/* */}\r\n\r\nexport const objects: Partial<IObjects>  = {\r\n    evaluatex: initialEvaluatex,\r\n};\r\n\r\nif (!loadState()) {\r\n    saveState(initialState);\r\n}\r\n\r\nObject.assign(initialState, loadState());\r\n\r\nexport const Store = createStore(initialState);\r\nwithEffects(Store);\r\nexport const withStore = connect(Store);\r\n","import React from 'react';\r\nimport { actions, Store, withStore } from '../../state/store';\r\nimport { IState, IStoreProps, SolvingMethod } from '../../types';\r\nimport './Control.css';\r\n\r\nconst writeCalculationMethod = (event: React.ChangeEvent<HTMLSelectElement>) => Store.set('solvingMethod')(parseInt(event.target.value));\r\nconst writeCheckbox = (param: keyof IState) => (event: React.ChangeEvent<HTMLInputElement>) => Store.set(param)(event.target.checked);\r\n\r\nconst Control: React.FC<IStoreProps> = ({ store }) => (\r\n    <div className=\"Control\">\r\n        <div className=\"Control-panel\">\r\n            <select className=\"Control-select\" value={store.get('solvingMethod')} onChange={writeCalculationMethod}>\r\n                <option value={SolvingMethod.BISECT}>Метод бисекции</option>\r\n                <option value={SolvingMethod.CHORD}>Метод хорд</option>\r\n                <option value={SolvingMethod.TANGENT}>Метод касательных</option>\r\n                {/* <option value={SolvingMethod.ITERATION}>Метод простых итераций</option> */}\r\n            </select>\r\n            <button onClick={actions.draw} className=\"Control-button\">График</button>\r\n            <button onClick={actions.solve} className=\"Control-button\">Рассчитать</button>\r\n            <span className=\"Control-panel-checkbox\">\r\n                <input type=\"checkbox\" checked={store.get('precisePlot')} onChange={writeCheckbox('precisePlot')}/>\r\n                <span>Точное построение</span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default withStore(Control);\r\n","import React from 'react';\r\nimport { IMathField, MathQuill, MathQuillStatic } from 'react-mathquill';\r\nimport { objects, Store, withStore } from '../../state/store';\r\nimport { IState, IStoreProps } from '../../types';\r\nimport './Formula.css';\r\n\r\ninterface IComponentState {\r\n    editRaw: boolean;\r\n}\r\n\r\ninterface IRoots {\r\n    roots: number[];\r\n}\r\n\r\nconst writeFloat = (param: keyof IState) => (mathField: IMathField) => Store.set(param)(parseFloat(mathField.latex()));\r\nconst writeFormula = (mathField: IMathField) => Store.set('formula')(mathField.latex());\r\nconst saveMQ = (mathField: IMathField) => objects.mathField = mathField;\r\n\r\nclass Formula extends React.Component<IStoreProps, IComponentState> {\r\n    public state = { editRaw: false };\r\n\r\n    public toggleRaw = () => {\r\n        this.setState({ editRaw: !this.state.editRaw });\r\n    }\r\n\r\n    public render() {\r\n        const { store } = this.props;\r\n        return (\r\n            <div className=\"Formula\">\r\n                <MathQuill\r\n                    className={typeof objects.evaluatex !== 'object' ? '' : 'Formula-error'}\r\n                    latex={store.get('formula')}\r\n                    onChange={writeFormula}\r\n                    mathquillDidMount={saveMQ}\r\n                />\r\n                <MathQuillStatic\r\n                    latex=\"=0,\\ e=\"\r\n                />\r\n                <MathQuill\r\n                    latex={store.get('eps').toString()}\r\n                    onChange={writeFloat('eps')}\r\n                />\r\n                <MathQuillStatic\r\n                    latex=\",\\ \\Delta=\"\r\n                />\r\n                <MathQuill\r\n                    latex={store.get('step').toString()}\r\n                    onChange={writeFloat('step')}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Roots: React.FC<IRoots> = ({ roots }) => (\r\n    <>{\r\n        roots\r\n        .map((r, i) => {\r\n            const digits = Math.abs(Math.log10(Store.get('eps'))) || 1;\r\n            const latex = `x_{${i + 1}}=`\r\n                + +r.toFixed(digits)\r\n                + (i < roots.length - 1 ? ',\\\\ ' : '');\r\n            return (\r\n                <MathQuillStatic\r\n                    key={r.toFixed(digits)}\r\n                    latex={latex}\r\n                />\r\n            );\r\n        })\r\n    }</>\r\n);\r\n\r\nexport default withStore(Formula);\r\n","import 'reflect-metadata';\r\n\r\nexport default function Throttle(delay: number) {\r\n    return (_: any, __: any, propertyDesciptor: PropertyDescriptor) => {\r\n\r\n        propertyDesciptor.value = throttle(propertyDesciptor.value, delay);\r\n\r\n        return propertyDesciptor;\r\n    };\r\n}\r\n\r\nexport function throttle(func: (args: IArguments) => any, ms: number) {\r\n\r\n  let isThrottled = false;\r\n  let savedArgs: any = null;\r\n  let savedThis: any = null;\r\n\r\n  function wrapper(this: any) {\r\n\r\n    if (isThrottled) {\r\n      savedArgs = arguments;\r\n      savedThis = this;\r\n      return;\r\n    }\r\n\r\n    func.apply(this, [arguments]);\r\n\r\n    isThrottled = true;\r\n\r\n    setTimeout(() => {\r\n      isThrottled = false;\r\n      if (savedArgs) {\r\n        wrapper.apply(savedThis, savedArgs);\r\n        savedArgs = savedThis = null;\r\n      }\r\n    }, ms);\r\n  }\r\n\r\n  return wrapper;\r\n}\r\n","import { objects, Store } from './state/store';\r\nimport { ArrayPoint, SolvingMethod } from './types';\r\n\r\nexport default class Methods {\r\n    public static [SolvingMethod.BISECT]([a, b]: ArrayPoint): number {\r\n        const e = Store.get('eps');\r\n        const F = (xx: number) => objects.evaluatex!({ x: xx });\r\n        let x;\r\n        do {\r\n            const Fa = F(a);\r\n            const Fb = F(b);\r\n            if (Fa === 0) { return a; }\r\n            if (Fb === 0) { return b; }\r\n            x = (a + b) / 2;\r\n            const Fx = F(x);\r\n            Math.sign(Fa)\r\n            !== Math.sign(Fx)\r\n                ? b = x\r\n                : a = x;\r\n        } while (b - a > e);\r\n\r\n        return x;\r\n    }\r\n\r\n    public static [SolvingMethod.ITERATION]([a, b]: ArrayPoint): number {\r\n        const c = (a + b) / 2;\r\n        // const e = Store.get('eps');\r\n        // const F = (xx: number) => objects.evaluatex!({ x: xx });\r\n        return c;\r\n    }\r\n\r\n    public static [SolvingMethod.TANGENT]([a, b]: ArrayPoint): number {\r\n        const e = Store.get('eps');\r\n        const F = (xx: number) => objects.evaluatex!({ x: xx });\r\n        let i = 0;\r\n        while (Math.abs(b - a) > e) {\r\n            a = b - F(b) / Methods.derivative(b);\r\n            b = a;\r\n            if (i > 10) { return b; }\r\n            i++;\r\n        }\r\n        return b;\r\n    }\r\n\r\n    public static [SolvingMethod.CHORD]([a, b]: ArrayPoint): number {\r\n        const e = Store.get('eps');\r\n        const F = (xx: number) => objects.evaluatex!({ x: xx });\r\n        while (Math.abs(b - a) > e) {\r\n            a = b - (b - a) * F(b) / (F(b) - F(a));\r\n            b = a + (a - b) * F(a) / (F(a) - F(b));\r\n        }\r\n        return b;\r\n    }\r\n\r\n    public static derivative(x: number) {\r\n        const e = Store.get('eps');\r\n        const F = (xx: number) => objects.evaluatex!({ x: xx });\r\n        return (F(x + e) - F(x)) / e;\r\n    }\r\n}\r\n","import { Layer as LayerType } from 'konva/types/Layer';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { Stage as StageType } from 'konva/types/Stage';\nimport React from 'react';\nimport * as ReactKonva from 'react-konva';\nimport Throttle from '../../decorators/throttle';\nimport Methods from '../../methods';\nimport { actions, objects, withStore } from '../../state/store';\nimport { ArrayPoint, IStoreProps } from '../../types';\nimport { Roots } from '../Formula';\nimport './Graph.css';\n\nconst isMobile = [/Android/, /webOS/, /iPhone/, /iPad/, /iPod/, /BlackBerry/, /Windows Phone/].some(rexp => rexp.test(navigator.userAgent));\nconst scaleFactor = 1.1;\n\ninterface IState {\n  width: number;\n  height: number;\n  points: ArrayPoint[];\n  roots: number[];\n}\n\nclass Graph extends React.Component<IStoreProps, IState> {\n  constructor(props: any) {\n    super(props);\n\n    this.resizeCanvas = this.resizeCanvas.bind(this);\n    this.resetTransform = this.resetTransform.bind(this);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    actions.draw = this.drawCanvas.bind(this);\n    actions.solve = this.solve.bind(this);\n  }\n\n  public state = { width: window.innerWidth * 0.9, height: window.innerHeight * 0.6, points: [], roots: [] };\n\n  public componentDidMount() {\n    window.addEventListener('resize', this.resizeCanvas);\n    this.drawCanvas();\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeCanvas);\n  }\n\n  @Throttle(isMobile ? 1000 : 500)\n  public drawCanvas() {\n    console.log('Draw called');\n\n    this.setState({ points: this.calculatePoints() });\n  }\n\n  public resizeCanvas() {\n    this.setState({ width: window.innerWidth * 0.9, height: window.innerHeight * 0.6 });\n    this.drawCanvas();\n  }\n\n  public handleScroll(event: KonvaEventObject<WheelEvent>) {\n    event.evt.preventDefault();\n    const layer = event.target.getLayer() as LayerType;\n    if (layer && layer.attrs.id === 'graph') {\n      const keys = ['Control', 'Alt', 'Shift'];\n      const modifiers = keys.map(key => event.evt.getModifierState(key));\n      const stage = layer.getStage() as StageType;\n      const oldScale = layer.scale();\n      const mousePos = {\n        x: stage.getPointerPosition()!.x / oldScale.x - layer.x() / oldScale.x,\n        y: stage.getPointerPosition()!.y / oldScale.y - layer.y() / oldScale.y\n      };\n      const newScale = {\n        x: (modifiers[0] || modifiers[1])\n          ? (event.evt.deltaY < 0 ? oldScale.x * scaleFactor : oldScale.x / scaleFactor)\n          : oldScale.x,\n        y: (modifiers[0] || modifiers[2])\n          ? (event.evt.deltaY < 0 ? oldScale.y * scaleFactor : oldScale.y / scaleFactor)\n          : oldScale.y,\n      };\n      const newPos = {\n        x: -(mousePos.x - stage.getPointerPosition()!.x / newScale.x) * newScale.x,\n        y: -(mousePos.y - stage.getPointerPosition()!.y / newScale.y) * newScale.y,\n      };\n      this.props.store.set('scale')([newScale.x, newScale.y]);\n      this.props.store.set('offset')([newPos.x / this.state.width, newPos.y / this.state.height]);\n    }\n    // console.log();\n    this.drawCanvas();\n  }\n\n  public handleDrag(event: KonvaEventObject<DragEvent>) {\n    const absPos = event.target.getAbsolutePosition();\n    this.props.store.set('offset')([absPos.x / this.state.width, absPos.y / this.state.height]);\n    this.drawCanvas();\n  }\n\n  public resetTransform() {\n    this.props.store.set('offset')([0.5, 0.5]);\n    this.props.store.set('scale')([100, 100]);\n    this.drawCanvas();\n  }\n\n  public calculatePoints() {\n    if (objects.evaluatex) {\n      const store = this.props.store;\n      const offset = store.get('offset');\n      const range = this.state.width / store.get('scale')[0];\n      const corners = [-range * offset[0], range * (1 - offset[0])];\n      const scaledStep = store.get('precisePlot') ? store.get('step') : (corners[1] - corners[0]) / this.state.width;\n\n      const points: ArrayPoint[] = [];\n      for (let x = corners[0]; x < corners[1]; x += scaledStep) {\n        try {\n          points.push([x, objects.evaluatex({ x })]);\n        } catch (error) {\n          console.log('errrr');\n        }\n      }\n      return points;\n    } else {\n      return [];\n    }\n  }\n\n  public solve() {\n    const points = this.calculatePoints();\n    const rootZones: ArrayPoint[] = [];\n    points.forEach((p, i) => {\n      const next = points[i + 1];\n      if (next && next[1] * p[1] <= 0) {\n        rootZones.push([p[0], next[0]]);\n      }\n    });\n    console.log(rootZones);\n    const roots = rootZones\n      .map(Methods[this.props.store.get('solvingMethod')])\n      .filter(Number.isFinite);\n\n    console.log(roots);\n\n    this.setState({ points, roots });\n  }\n\n  public render() {\n    const state = this.state;\n    const store = this.props.store;\n\n    const center = {\n      x: state.width * store.get('offset')[0],\n      y: state.height * store.get('offset')[1],\n    };\n    const scale = {\n      x: store.get('scale')[0],\n      y: store.get('scale')[1]\n    };\n    const strokeWidth = 2 / Math.sqrt(scale.x * scale.y);\n\n    const withScale = { scale };\n    const withStrokeWidth = { strokeWidth };\n\n    const { Stage, Layer, Group, Rect, Line, Text } = ReactKonva;\n\n    return (\n      <div className=\"Graph\">\n        <Stage onWheel={this.handleScroll} className=\"Graph-stage\" {...state}>\n          <Layer onDblTap={this.resetTransform} onDblClick={this.resetTransform} draggable onDragEnd={this.handleDrag} {...withScale} id=\"graph\" {...center}>\n            <Group>\n              <Rect fill=\"transparent\" x={-center.x / scale.x} y={-center.y / scale.y} width={state.width / scale.x} height={state.height / scale.y} />\n              {/* <Rect fill=\"red\" width={state.width} height={state.height} /> */}\n              <Line stroke=\"black\" {...withStrokeWidth} points={[-9000, 0, 9000, 0]} />\n              <Line stroke=\"black\" {...withStrokeWidth} points={[0, -9000, 0, 9000]} />\n            </Group>\n            <Group>\n              <Line stroke=\"black\" {...withStrokeWidth} points={state.points.flat()} scaleY={-1} />\n            </Group>\n          </Layer>\n          <Layer id=\"text\">\n            <Text\n              onClick={this.resetTransform}\n              text={\n                'react-konva H:'\n                + state.height.toFixed(2)\n                + ' W:'\n                + state.width.toFixed(2)\n                + ' S:'\n                + store.get('scale').map(v => v.toFixed(2))\n                + ' O:'\n                + store.get('offset').map(v => v.toFixed(2))\n                + ' C:'\n                + Object.values(center).map(v => v.toFixed(2))\n                + ' B:'\n                + [-state.width / store.get('scale')[0], state.width / store.get('scale')[1]].map(v => v.toFixed(2))\n                + ' P:'\n                + state.points.length\n                + ' Click here to reset.'\n              }\n              fontSize={12}\n              fontFamily={`\"Lucida Console\", Monaco, monospace`}\n            />\n          </Layer>\n        </Stage>\n        <div className=\"Graph-roots\">\n          <Roots roots={state.roots} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStore(Graph);\n","import React from 'react';\r\nimport { MathQuillStatic } from 'react-mathquill';\r\nimport { objects, withStore } from '../../state/store';\r\nimport { IStoreProps } from '../../types';\r\nimport './MathBoard.css';\r\n\r\n// interface IState {\r\n//     editRaw: boolean;\r\n// }\r\n\r\nconst operators = ['\\\\pi', '☐^2', 'x^{☐}', '\\\\sqrt{☐}', '\\\\sqrt[☐]{☐}', '\\\\frac{☐}{☐}', '\\\\log_{☐}'];\r\n\r\nconst writeLaTex = (op: string) => () => objects.mathField && objects.mathField.write(op.replace(/☐/g, ''));\r\n\r\nconst Button = (op: string, i: number) => (\r\n    <div\r\n        key={`btn${i}`}\r\n        className=\"MathBoard-buttons\"\r\n        onClick={writeLaTex(op)}\r\n    >\r\n        <MathQuillStatic latex={op} />\r\n    </div>\r\n);\r\n\r\nconst MathBoard: React.FC<IStoreProps> = ({ store }) => (\r\n    <div className=\"MathBoard\">\r\n        {operators.map(Button)}\r\n    </div>\r\n);\r\n\r\nexport default withStore(MathBoard);\r\n","import React from 'react';\nimport { withStore } from '../../state/store';\nimport { IStoreProps } from '../../types';\nimport Control from '../Control';\nimport Formula from '../Formula';\nimport Graph from '../Graph';\nimport MathBoard from '../MathBoard';\nimport './App.css';\n\nclass App extends React.Component<IStoreProps> {\n  public render() {\n    // const { store } = this.props;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Graph />\n          <Formula />\n          <Control />\n          <MathBoard />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default withStore(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface IConfig {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: IConfig) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: IConfig) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: IConfig) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import Root from './components/Root';\nimport './index.css';\nimport './mathquill.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}